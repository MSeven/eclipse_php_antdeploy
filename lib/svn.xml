<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: svn.xml 718 2009-02-11 16:05:23Z mgr2 $ -->
<!--
	CVS Servicefunctions
-->
<project name="SCM_svn_include" basedir=".">
	<property name="SCM.tagToDeploy" value="trunk" />
	<property file="svnUserinfo.properties" />
	<!--  path to the svnant libraries. Usually they will be located in ANT_HOME/lib  -->
	<path id="svnant.classpath">
		<fileset dir="lib/svnant">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!--  load the svn task	  -->
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

	<target name="svnCliTest">
		<echo message=" --- SVN CLI TEST ---" />
		<echo message=" Ueberpruefe auf SVN CLI client fuer eventuelle beschleunigung." />
		<echo message=" Windows CLI SVN gibts z.b. hier: http://www.sliksvn.com/en/download" />
		<exec executable="svn" failifexecutionfails="false" resultproperty="svnCliMissing">
			<arg value="--version" />
			<arg value="--quiet" />
		</exec>
		<property name="svnCliMissing" value="true" />
		<echo message=" --- svn cli status:${svnCliMissing} ---" />
		<echo message=" --- SVN CLI TEST ---" />
	</target>

	<target name="isCheckedOut">
		<echo message=" --- SVN ISCHECKEDOUT ---" />
		<echo message="Creating ${SCM.workingDirectory}" />
		<mkdir dir="${SCM.workingDirectory}" />
		<echo message="isDirectory? ${SCM.workingDirectory}/${modulname}" />
		<available property="checkedOut" file="${SCM.workingDirectory}/${modulname}" type="dir" />
		<echo message=" --- /SVN ISCHECKEDOUT ---" />
	</target>

	<!-- Das modul in das SCMdir auschecken, wenn es noch nicht existiert -->
	<target name="checkout" depends="setSCMLoginInformation, isCheckedOut,svnCliTest" unless="checkedOut">
		<tstamp>
			<format property="tmptime.checkout.start" pattern="HH:mm" />
		</tstamp>
		<echo message=" --- SVN CHECKOUT (${tmptime.checkout.start}) ---" />
		<mkdir dir="${SCM.workingDirectory}" />
		<svn username="${SCM.login}" password="${SCM.password}" svnkit="${svnCliMissing}">
			<checkout url="${SCM.repository}/${SCM.tagToDeploy}" destPath="${SCM.workingDirectory}/${modulname}" />
		</svn>
		<tstamp>
			<format property="tmptime.checkout.end" pattern="HH:mm" />
		</tstamp>
		<echo message=" --- /SVN CHECKOUT (${tmptime.checkout.end}) ---" />
	</target>

	<!-- Eine ausgecheckte Version aktualisieren -->
	<target name="updatebytag" depends="checkout, setSCMLoginInformation,svnCliTest">
		<tstamp>
			<format property="tmptime.updatet.start" pattern="HH:mm" />
		</tstamp>
		<echo message=" --- SVN UPDATE BY TAG (${tmptime.updatet.start}) ---" />
		<svn username="${SCM.login}" password="${SCM.password}" svnkit="${svnCliMissing}">
			<update dir="${SCM.workingDirectory}/${modulname}" />
		</svn>
		<tstamp>
			<format property="tmptime.updatet.end" pattern="HH:mm" />
		</tstamp>
		<echo message=" --- /SVN UPDATEBY TAG (${tmptime.updatet.end}) ---" />
	</target>

	<!-- Das Tag für den aktuellen Server/das aktuelle Target setzen -->
	<target name="setTag" depends="setSCMLoginInformation, timestamp,svnCliTest">
		<echo message=" --- SVN SET TAG ---" />
		<svn username="${SCM.login}" password="${SCM.password}" failonerror="false" svnkit="${svnCliMissing}">
			<status path="${SCM.workingDirectory}/${modulname}" lastChangedRevisionProperty="SCM.deployRevision" />
			<delete url="${SCM.repository}/tags/${target}" message="AntDeploy_${target}_${timestamp}" />
			<copy srcUrl="${SCM.repository}/${SCM.tagToDeploy}" destUrl="${SCM.repository}/tags/${target}" message="AntDeploy_${timestamp}" />
			<copy srcUrl="${SCM.repository}/${SCM.tagToDeploy}" destUrl="${SCM.repository}/tags/${target}_${timestamp}" message="AntDeploy_${timestamp}" />
		</svn>
		<concat destfile="${SCM.workingDirectory}/${modulname}/revision/${target}.txt">${SCM.deployRevision}</concat>
		<svn username="${SCM.login}" password="${SCM.password}" failonerror="false" svnkit="${svnCliMissing}">
			<delete url="${SCM.repository}/tags/${target}/revision/${target}.txt" message="AntDeploy_${timestamp}" />
		</svn>
		<svn username="${SCM.login}" password="${SCM.password}" svnkit="${svnCliMissing}">
			<import path="${SCM.workingDirectory}/${modulname}/revision/${target}.txt" url="${SCM.repository}/tags/${target}/revision/${target}.txt" message="AntDeploy_${timestamp}" />
		</svn>
		<echo message=" --- /SVN SET TAG ---" />
	</target>

	<!--	Changelog erstellen; die Unterschiede zwischen zwei Tags. -->
	<target name="generateChangelog" depends="checkVarsSCM,setSCMLoginInformation, timestamp,svnCliTest">
		<echo message="--- SVN GENERATE CHANGELOG ---" />
		<delete dir="${SCM.workingDirectory}/${modulname}/revision" />
		<mkdir dir="${SCM.workingDirectory}/${modulname}/revision/${SCM.liveServer}" />
		<!-- Checke die Files aus, aus denen die Revisionnummer abgelesen werden kann -->
		<svn username="${SCM.login}" password="${SCM.password}" failonerror="false" svnkit="${svnCliMissing}">
			<checkout url="${SCM.repository}/tags/${SCM.liveServer}/revision" destPath="${SCM.workingDirectory}/${modulname}/revision/${SCM.liveServer}" />
		</svn>
		<loadresource property="SCM.liveRevision" failonerror="false">
			<file file="${SCM.workingDirectory}/${modulname}/revision/${SCM.liveServer}/${SCM.liveServer}.txt" />
		</loadresource>
		<!-- wenn SCM.liveRevision noch nicht gesetzt ist, ging etwas schief, evtl. wurde noch nie live deployed. also default setzen -->
		<property name="SCM.liveRevision" value="1" />

		<!-- Deployte revisionsnummer holen -->
		<svn username="${SCM.login}" password="${SCM.password}" svnkit="${svnCliMissing}">
			<status path="${SCM.workingDirectory}/${modulname}" lastChangedRevisionProperty="SCM.deployRevision" />
		</svn>
		<!-- Bestimme den Unterschied zwischen der aktuell deployten und live revision -->
		<echo message="Deploy: ${SCM.deployRevision}" />
		<echo message="Live: ${SCM.liveRevision}" />
		<exec executable="svn" output="${SCM.workingDirectory}/${modulname}_changelog.xml">
			<arg value="log" />
			<arg value="${SCM.repository}/${SCM.tagToDeploy}" />
			<arg value="-r${SCM.deployRevision}:${SCM.liveRevision}" />
			<arg value="--xml" />
			<arg value="-v" />
		</exec>

		<!-- Changelog XSL Transformation -->
		<delete file="${SCM.workingDirectory}/${modulname}_changelog.html" />
		<xslt in="${SCM.workingDirectory}/${modulname}_changelog.xml" out="${SCM.workingDirectory}/${modulname}_changelog.html" style="${basedir}/lib/changelog_svn.xsl">
			<param name="title" expression="${modulname} (${target} [${timestamp}])" />
			<param name="module" expression="${modulname}" />
			<param name="server" expression="${target}:/${server.path}" />
			<param name="deployed" expression="${SCM.repository}" />
			<param name="SCMuser" expression="${SCM.login}" />
			<param name="SCMdeployed" expression="${SCM.tagToDeploy}" />
			<param name="SCMhistorytag" expression="${target}_${timestamp}" />
		</xslt>
		<echo message="--- /SVN GENERATE CHANGELOG ---" />
	</target>

	<!-- Dies kann durch ein File "svnUserinfo.properties" vorbelegt werden! -->
	<target name="setSCMLoginInformation">
		<input addproperty="SCM.login" message="SCM-Loginname (optional 'SCM.login=' in svnUserinfo.properties eintragen)" />
		<input addproperty="SCM.password" message="SCM-Passwort (optional 'SCM.password=' in svnUserinfo.properties eintragen)" />
	</target>

	<!-- Überprüfung der benötigten variablen -->
	<target name="checkVarsSCM">
		<fail unless="modulname" message="Es sind nicht alle benötigten SVN Variabeln gesetzt. (modulname)" />
		<fail unless="SCM.workingDirectory" message="Es sind nicht alle benötigten SVN Variabeln gesetzt. (SCM.workingDirectory)" />
		<fail unless="SCM.repository" message="Es sind nicht alle benötigten SVN Variabeln gesetzt. (SCM.repository)" />
		<fail unless="SCM.tagToDeploy" message="Es sind nicht alle benötigten SVN Variabeln gesetzt. (SCM.tagToDeploy)" />
		<fail unless="SCM.liveServer" message="Es sind nicht alle benötigten CVS Variabeln gesetzt. (SCM.liveServer)" />
	</target>

</project>